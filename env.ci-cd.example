# MinberAI CI/CD Environment Configuration
# Copy this file to .env and fill in your values
# This file is used by setup-ci-cd.sh for automatic CI/CD setup

# =============================================================================
# GOOGLE CLOUD CONFIGURATION
# =============================================================================

# Google Cloud Project ID (REQUIRED)
GOOGLE_CLOUD_PROJECT_ID=your-project-id

# Google Cloud Region (default: europe-west1)
GOOGLE_CLOUD_REGION=europe-west1

# Service Account Configuration
GOOGLE_CLOUD_SERVICE_ACCOUNT_NAME=minberai-service-account
GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE=minberai-service-account.json

# =============================================================================
# GITHUB CONFIGURATION (for Cloud Build triggers)
# =============================================================================

# GitHub repository owner (your username or organization)
GITHUB_OWNER=your-github-username

# GitHub repository name
GITHUB_REPO=MinberAI

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Cloud Run service names
DEV_SERVICE_NAME=minbarai-dev
PROD_SERVICE_NAME=minbarai-pro

# Custom domain for production
CUSTOM_DOMAIN=minbarai.com

# =============================================================================
# APPLICATION SECRETS (for Secret Manager)
# =============================================================================

# Stripe Configuration
STRIPE_SECRET_KEY=sk_live_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret

# Supabase Configuration
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# =============================================================================
# PUBLIC ENVIRONMENT VARIABLES (for Cloud Build)
# =============================================================================

# Supabase Public Configuration
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key

# Stripe Public Configuration
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_live_your_stripe_publishable_key
NEXT_PUBLIC_STRIPE_PRICE_ID=price_your_stripe_price_id

# VoiceFlow Configuration
NEXT_PUBLIC_VOICEFLOW_WS_URL=wss://your-voiceflow-websocket-url
NEXT_PUBLIC_VOICEFLOW_WS_TOKEN=your_voiceflow_websocket_token

# Application URLs
NEXT_PUBLIC_SITE_URL=https://minbarai.com
NEXTAUTH_URL=https://minbarai.com

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Build Configuration
NODE_ENV=production
NEXT_TELEMETRY_DISABLED=1

# CI/CD Configuration
CI_CD_ENABLED=true
AUTO_DEPLOY_DEV=true
AUTO_DEPLOY_PROD=true

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env:
#    cp env.ci-cd.example .env

# 2. Fill in all the values above with your actual configuration

# 3. Run the CI/CD setup:
#    ./setup-ci-cd.sh

# 4. The script will automatically:
#    - Enable required Google Cloud APIs
#    - Create service account with proper permissions
#    - Set up secrets in Secret Manager
#    - Create Cloud Build triggers for dev and main branches
#    - Verify the complete setup

# 5. Test the pipeline:
#    git checkout dev
#    git commit --allow-empty -m "test: trigger CI/CD"
#    git push origin dev

# =============================================================================
# NOTES
# =============================================================================

# - All secrets (STRIPE_SECRET_KEY, etc.) will be stored in Google Secret Manager
# - Public variables (NEXT_PUBLIC_*) will be passed as build arguments to Docker
# - The CI/CD pipeline will automatically deploy:
#   - dev branch → minbarai-dev service
#   - main branch → minbarai-pro service
# - You can run setup-ci-cd.sh multiple times safely
# - Use --help flag for more options: ./setup-ci-cd.sh --help
