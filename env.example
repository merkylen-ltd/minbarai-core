# ================================================================================
#                           MINBERAI ENVIRONMENT VARIABLES
# ================================================================================
# Copy this file to .env and fill in your actual values
# cp env.example .env
#
# SECURITY NOTE: Never commit .env to version control!
# ================================================================================

# ================================================================================
#                              GOOGLE CLOUD CONFIGURATION
# ================================================================================
# Google Cloud Project Configuration

# Google Cloud Project ID
GOOGLE_CLOUD_PROJECT_ID=gen-lang-client-0842740671

# Google Cloud Region
GOOGLE_CLOUD_REGION=europe-west1

# Service Account name (will be created by setup script)
GOOGLE_CLOUD_SERVICE_ACCOUNT_NAME=minberai-service-account

# Service Account JSON file path (relative to project root)
GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE=minberai-service-account.json

# ================================================================================
#                                SUPABASE DATABASE
# ================================================================================
# Get these from: https://supabase.com/dashboard → Your Project → Settings → API

# Public Supabase URL (safe to expose in frontend)
NEXT_PUBLIC_SUPABASE_URL=https://hjsifxofnqbnrgqkbomx.supabase.co

# Public Supabase anonymous key (safe to expose in frontend)
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imhqc2lmeG9mbnFibnJncWtib214Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjA1Mjg5NTAsImV4cCI6MjA3NjEwNDk1MH0.zKHLaT6H5HtjUgG_gZxmgsPpMY7GE7l0rdiMitn9iaY

# Service role key (PRIVATE - stored in Secret Manager)
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imhqc2lmeG9mbnFibnJncWtib214Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MDUyODk1MCwiZXhwIjoyMDc2MTA0OTUwfQ.Lwrfbm6aVfUEYWg0IvfwhEv977z3SEV_o794xUzPsa0

# ================================================================================
#                                STRIPE PAYMENTS
# ================================================================================
# Get these from: https://dashboard.stripe.com/ → Developers → API Keys

# Stripe secret key (PRIVATE - stored in Secret Manager)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key

# Stripe publishable key (safe to expose in frontend)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key

# Stripe webhook secret (PRIVATE - stored in Secret Manager)
# Get from: Stripe Dashboard → Developers → Webhooks → Your Endpoint → Signing secret
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret

# Stripe Price ID for €99/month subscription (safe to expose in frontend)
# Get from: Stripe Dashboard → Products → Create Price → Copy Price ID
NEXT_PUBLIC_STRIPE_PRICE_ID=price_1SB0jD484U6B4yaGMAb6nlZ8



# ================================================================================
#                                VOICEFLOW SPEECH RECOGNITION
# ================================================================================
# VoiceFlow WebSocket URLs for speech recognition service

# Development WebSocket URL (safe to expose in frontend)
NEXT_PUBLIC_VOICEFLOW_WS_URL=https://voiceflow-relay-e5l6mfznxq-ew.a.run.app

# Production WebSocket URL (safe to expose in frontend)
NEXT_PUBLIC_VOICEFLOW_WS_URL_PROD=https://voiceflow-relay-e5l6mfznxq-ew.a.run.app

# VoiceFlow WebSocket authentication token (safe to expose in frontend)
NEXT_PUBLIC_VOICEFLOW_WS_TOKEN=a76c1703095c5454aaa920dfae74969331bd4cc92160740732ef493d1fca6cf4



# ================================================================================
#                              APPLICATION URLS
# ================================================================================

# Base URL for the application (safe to expose in frontend)
# Development: http://localhost:3000
# Production: https://minbarai.com
# Cloud Run Dev: https://minbarai-dev-xxxxx.run.app
NEXT_PUBLIC_SITE_URL=http://localhost:3000

# NextAuth.js base URL (safe to expose in frontend)
# Development: http://localhost:3000
# Production: https://minbarai.com
# Cloud Run Dev: https://minbarai-dev-xxxxx.run.app
NEXTAUTH_URL=http://localhost:3000

# ================================================================================
#                              CLOUD RUN SERVICES
# ================================================================================

# Production service name
CLOUD_RUN_SERVICE_PROD=minbarai-pro

# Development service name
CLOUD_RUN_SERVICE_DEV=minbarai-dev

# Custom domain for production
CUSTOM_DOMAIN=minbarai.com

# ================================================================================
#                              OPTIONAL VARIABLES
# ================================================================================

# External database URL (if not using Supabase)
# Only needed if you want to use an external PostgreSQL database
DATABASE_URL=postgresql://username:password@host:port/database

# Node environment
NODE_ENV=development

# Next.js telemetry (disable for privacy)
NEXT_TELEMETRY_DISABLED=1

# ================================================================================
#                              QUICK SETUP GUIDE
# ================================================================================
#
# 1. COPY ENVIRONMENT FILE:
#    cp env.example .env
#    # Edit .env with your actual values
#
# 2. GOOGLE CLOUD SETUP:
#    - Create Google Cloud project
#    - Run ./setup-service-account.sh to create service account and enable APIs
#    - Run ./setup-secrets.sh to configure Secret Manager
#
# 3. SUPABASE SETUP:
#    - Go to https://supabase.com/dashboard
#    - Create new project
#    - Copy URL and keys from Settings → API
#    - Update OAuth redirect URLs for Cloud Run deployments
#
# 4. STRIPE SETUP:
#    - Go to https://dashboard.stripe.com/
#    - Get API keys from Developers → API Keys
#    - Create product with €99/month pricing
#    - Webhooks will be auto-registered by deployment scripts
#
# 5. AI SERVICE SETUP:
#    - Go to https://aistudio.google.com/
#    - Create API key for Gemini service
#
# 6. VOICEFLOW SETUP:
#    - Get WebSocket URL and token from VoiceFlow service
#    - Set development URL for local testing
#    - Set production URL for live deployment
#
# 7. DEPLOYMENT:
#    - Production: ./deploy-pro.sh
#    - Development: ./deploy-dev.sh
#    - Both scripts automatically load .env file and handle deployment
#
# 8. URL CONFIGURATION:
#    - Development: http://localhost:3000
#    - Production: https://minbarai.com
#    - Cloud Run Dev: https://minbarai-dev-xxxxx.run.app
#
# ================================================================================
